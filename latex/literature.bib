@mastersthesis{endreport.pdf,
  type={Project Report},
  author   = {Humig, Tobias},
  title    = {Project Report: Exploring Performance Modeling in AutoPas},
  year     = {2023},
  school   = {Technical University of Munich},
  month    = {Oct},
  adress   = {},
  pages    = {},
  language = {en},
  abstract = {The particle simulation library AutoPas implements many algorithms with vastly different performance characteristics to solve the pairwise short-range particle interactions in molecular dynamics simulations. During the simulation, it uses black-box optimization techniques to automatically select the fastest algorithm for the current state. While they are able to find good algorithms eventually, they often try highly unsuitable ones at the start due to lack of initial per- formance information. As some algorithms perform orders of magnitude worse than the optimum for a given simulation state, this has a significant negative impact on the time to solution.
              In this project, we gather knowledge about the performance characteristics of the algorithms through theoretical modeling, profiling, and benchmarking. We make the results available through a new white-box optimization strategy that is able to apply any domain-specific knowledge during optimization. It removes those algorithms from the candidate list that likely perform worst in the current simulation state. In our tests, removing the five percent slowest algorithms reduced the tuning time by up to 80 percent while still finding the best algorithm. Furthermore, we give insights and recommendations what can be done to potentially improve the performance further.
              },
  keywords = {AutoPas},
  note     = {},
  url      = {}
}

@misc{autopas_issue673,
  author       = {HobbyProgrammer},
  title        = {Skip (or even timeout) extremely long running iterations of configurations during tuning},
  year         = {2022},
  publisher    = {GitHub},
  journal      = {GitHub repository},
  howpublished = {\url{https://github.com/AutoPas/AutoPas/issues/673}},
  note         = {Accessed: 2024-11-06}
}


@mastersthesis{Manuel_Lerchner_Thesis.pdf,
  type={Bachelor's Thesis},
  author   = {Lerchner, Manuel},
  title    = {Exploring Fuzzy Tuning Technique for Molecular Dynamics Simulations in AutoPas},
  year     = {2024},
  school   = {Technical University of Munich},
  month    = {Aug},
  adress   = {},
  pages    = {},
  language = {en},
  abstract = {AutoPas is a high-performance, auto-tuned particle simulation library for many-body systems, capable of dynamically switching between algorithms and data structures to guarantee optimal performance throughout the simulation.
              This thesis introduces a novel fuzzy logic-based tuning strategy for AutoPas, allowing users to guide the tuning process by specifying custom Fuzzy Systems, which can be used to efficiently prune the search space of possible parameter configurations. Efficient tuning strategies are crucial, as they allow for discarding poor parameter configurations without evaluating them, thus reducing tuning time and improving overall library performance.
              We demonstrate that a data-driven approach can automatically generate Fuzzy Systems that significantly outperform existing tuning strategies on specific benchmarks, resulting in speedups of up to 1.96x compared to the FullSearch Strategy on scenarios included in the training data and up to 1.35x on scenarios not directly included.
              The Fuzzy Tuning Strategy can drastically reduce the number of evaluated configurations during tuning phases while achieving comparable tuning results, making it a promising alternative to the existing tuning strategies.
              
              },
  keywords = {AutoPas; Auto-tuning; Fuzzy Logic;},
  note     = {},
  url      = {}
}

@phdthesis{Tchipev2020,
	author = {Tchipev, Nikola Plamenov},
	title = {Algorithmic and Implementational Optimizations of Molecular Dynamics Simulations for Process Engineering},
	year = {2020},
	school = {Technische Universität München},
	pages = {189},
	language = {en},
	abstract = {The focus of this work lies on implementational improvements and, in particular, node-level performance optimization of the simulation software ls1-mardyn. Through data structure improvements, SIMD vectorization and, especially, OpenMP parallelization, the world’s first simulation of 2*10<sup>13</sup> molecules at over 1 PFLOP/sec was enabled. To allow for long-range interactions, the Fast Multipole Method was introduced to ls1-mardyn. The algorithm was optimized for sequential, shared-memory, and distributed-memory execution on up to 32,768 MPI processes.},
	keywords = {molecular dynamics, node-level performance, OpenMP, Fast Multipole Method},
	note = {},
	url = {https://mediatum.ub.tum.de/1524715},
}

@INPROCEEDINGS{Gratl2019AutoPas,
  author={Gratl, Fabio Alexander and Seckler, Steffen and Tchipev, Nikola and Bungartz, Hans-Joachim and Neumann, Philipp},
  booktitle={2019 IEEE International Parallel and Distributed Processing Symposium Workshops (IPDPSW)}, 
  title={AutoPas: Auto-Tuning for Particle Simulations}, 
  year={2019},
  volume={},
  number={},
  pages={748-757},
  keywords={Force;Heuristic algorithms;Computational modeling;Dynamics;Optimization;Software algorithms;Adaptation models;HPC;Molecular Dynamics;Auto-Tuning;Automatic Algorithm Selection;Dynamic Tuning},
  doi={10.1109/IPDPSW.2019.00125}}
